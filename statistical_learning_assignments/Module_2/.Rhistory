x <- seq(0,15, length.out=100) # x-axis
x <- seq(0,15, length.out=100) # x-axis
test_mse <- (x-10^2) + 10 # test MSE
variance <- exp(x) # variance
bias <- exp(-x) + 5 # Bias
df <- data.frame(x, test_mse, variance, bias)
df <- data.frame(x, test_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
labs(title = "Curves: Test MSE, Variance, and Bias",
x = "x-axis",
y = "Value",
color = "Curve Type") +
theme_minimal()
x <- seq(0,5, length.out=100) # x-axis
x <- seq(0,5, length.out=100) # x-axis
test_mse <- (x-10^2) + 10 # test MSE
variance <- exp(x) # variance
bias <- exp(-x) + 5 # Bias
df <- data.frame(x, test_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
labs(title = "Curves: Test MSE, Variance, and Bias",
x = "x-axis",
y = "Value",
color = "Curve Type") +
theme_minimal()
x <- seq(0,5, length.out=100) # x-axis
test_mse <- (x-10^2) + 10 # test MSE
variance <- exp(.25*x) # variance
bias <- exp(.25*-x) + 5 # Bias
df <- data.frame(x, test_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
labs(title = "Curves: Test MSE, Variance, and Bias",
x = "x-axis",
y = "Value",
color = "Curve Type") +
theme_minimal()
x <- seq(0,5, length.out=100) # x-axis
test_mse <- (x-10)^2 + 10 # test MSE
variance <- exp(.25*x) # variance
bias <- exp(.25*-x) + 5 # Bias
df <- data.frame(x, test_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
labs(title = "Curves: Test MSE, Variance, and Bias",
x = "x-axis",
y = "Value",
color = "Curve Type") +
theme_minimal()
x <- seq(0,30, length.out=100) # x-axis
x <- seq(0,30, length.out=100) # x-axis
test_mse <- (x-10)^2 + 10 # test MSE
variance <- exp(.25*x) # variance
bias <- exp(.25*-x) + 60 # Bias
df <- data.frame(x, test_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
labs(title = "Curves: Test MSE, Variance, and Bias",
x = "x-axis",
y = "Value",
color = "Curve Type") +
theme_minimal()
x <- seq(0,15, length.out=100) # x-axis
test_mse <- (x-10)^2 + 10 # test MSE
variance <- exp(.25*x) # variance
bias <- exp(.25*-x) + 60 # Bias
df <- data.frame(x, test_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
labs(title = "Curves: Test MSE, Variance, and Bias",
x = "x-axis",
y = "Value",
color = "Curve Type") +
theme_minimal()
set.seed(123)
x_vals <- seq(1, 10, length.out = 100)
# Fake "bias^2" that decreases as model complexity increases
bias2_vals <- (10 - x_vals)^2 / 20
# Fake "variance" that increases as model complexity increases
variance_vals <- (x_vals - 1)^2 / 20
# Total error is just bias^2 + variance (ignoring irreducible error for simplicity)
total_error_vals <- bias2_vals + variance_vals
df <- data.frame(
Complexity = x_vals,
Bias2 = bias2_vals,
Variance = variance_vals,
`Total Error` = total_error_vals
)
# Reshape data from wide to long for plotting
df_long <- df %>%
pivot_longer(cols = c(Bias2, Variance, `Total Error`),
names_to = "ErrorType",
values_to = "ErrorValue")
library(ggplot2)
library(tidyr)
library(dplyr)
set.seed(123)
x_vals <- seq(1, 10, length.out = 100)
# Fake "bias^2" that decreases as model complexity increases
bias2_vals <- (10 - x_vals)^2 / 20
# Fake "variance" that increases as model complexity increases
variance_vals <- (x_vals - 1)^2 / 20
# Total error is just bias^2 + variance (ignoring irreducible error for simplicity)
total_error_vals <- bias2_vals + variance_vals
df <- data.frame(
Complexity = x_vals,
Bias2 = bias2_vals,
Variance = variance_vals,
`Total Error` = total_error_vals
)
# Reshape data from wide to long for plotting
df_long <- df %>%
pivot_longer(cols = c(Bias2, Variance, `Total Error`),
names_to = "ErrorType",
values_to = "ErrorValue")
# Install and load packages if needed
# install.packages("ggplot2")
# install.packages("dplyr")
# install.packages("tidyr")
library(ggplot2)
library(dplyr)
library(tidyr)
# 1. Create some mock data
#    x represents model complexity
#    We'll define some functions for bias^2, variance, and total error
set.seed(123)
x_vals <- seq(1, 10, length.out = 100)
# Fake "bias^2" that decreases as model complexity increases
bias2_vals <- (10 - x_vals)^2 / 20
# Fake "variance" that increases as model complexity increases
variance_vals <- (x_vals - 1)^2 / 20
# Total error is just bias^2 + variance (ignoring irreducible error for simplicity)
total_error_vals <- bias2_vals + variance_vals
df <- data.frame(
Complexity = x_vals,
Bias2 = bias2_vals,
Variance = variance_vals,
`Total Error` = total_error_vals
)
# Reshape data from wide to long for plotting
df_long <- df %>%
pivot_longer(cols = c(Bias2, Variance, `Total Error`),
names_to = "ErrorType",
values_to = "ErrorValue")
x <- seq(0,15, length.out=100) # x-axis
variance <- (x-1)^2 / 20 # variance
bias <- (10-x^2)^2 / 20 # Bias
test_mse <- variance + bias + 2 # test MSE
df <- data.frame(x, test_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
labs(title = "Curves: Test MSE, Variance, and Bias",
x = "x-axis",
y = "Value",
color = "Curve Type") +
theme_minimal()
x <- seq(0,15, length.out=100) # x-axis
variance <- (x-1)^2 / 20 # variance
bias <- (10-x)^2 / 20 # Bias
test_mse <- variance + bias + 2 # test MSE
df <- data.frame(x, test_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
labs(title = "Curves: Test MSE, Variance, and Bias",
x = "x-axis",
y = "Value",
color = "Curve Type") +
theme_minimal()
x <- seq(0,15, length.out=100) # x-axis
variance <- (x-1)^2 / 20 # variance
bias <- (10-x)^2 / 20 # Bias
test_mse <- variance + bias + 2 # test MSE
df <- data.frame(x, test_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
labs(title = "Curves: Test MSE, Variance, and Bias",
x = "x-axis",
y = "Value",
color = "Curve Type") +
scale_color_manual(c("orange", "lightblue", "magenta"))
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
labs(title = "Curves: Test MSE, Variance, and Bias",
x = "x-axis",
y = "Value",
color = "Curve Type") +
scale_color_manual(c("orange", "lightblue", "magenta")) +
theme_minimal()
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
labs(title = "Curves: Test MSE, Variance, and Bias",
x = "x-axis",
y = "Value",
color = "Curve Type") +
scale_color_manual(values = c("orange", "lightblue", "magenta")) +
theme_minimal()
x <- seq(0,15, length.out=100) # x-axis
variance <- (x-1)^2 / 20 # variance
bias <- (10-x)^2 / 20 # Bias
test_mse <- variance + bias + 2 # test MSE
df <- data.frame(x, test_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
geom_vline(5.5) +
geom_hline(2)
x <- seq(0,15, length.out=100) # x-axis
variance <- (x-1)^2 / 20 # variance
bias <- (10-x)^2 / 20 # Bias
test_mse <- variance + bias + 2 # test MSE
df <- data.frame(x, test_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
geom_vline(xintercept = 5.5) +
geom_hline(yintercept = 2)
labs(title = "Bias-Variance Tradeoff Curves",
x = "Flexibility",
y = "Value",
color = "Curve Type") +
scale_color_manual(values = c("orange", "lightblue", "magenta")) +
theme_minimal()
x <- seq(0,15, length.out=100) # x-axis
variance <- (x-1)^2 / 20 # variance
bias <- (10-x)^2 / 20 # Bias
test_mse <- variance + bias + 2 # test MSE
df <- data.frame(x, test_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
geom_vline(xintercept = 5.5, linetype = "longdash") +
geom_hline(yintercept = 2, linetype = "longdash")
labs(title = "Bias-Variance Tradeoff Curves",
x = "Flexibility",
y = "Value",
color = "Curve Type") +
scale_color_manual(values = c("orange", "lightblue", "magenta")) +
theme_minimal()
x <- seq(0,15, length.out=100) # x-axis
variance <- (x-1)^2 / 20 # variance
bias <- (10-x)^2 / 20 # Bias
test_mse <- variance + bias + 2 # test MSE
df <- data.frame(x, test_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
geom_vline(xintercept = 5.5, linetype = "longdash") +
annotate("text", x = 5.5, y = 6,
label = "Optimal Flexibility",
angle = 90, vjust = -0.5)
geom_hline(yintercept = 2, linetype = "longdash")
labs(title = "Bias-Variance Tradeoff Curves",
x = "Flexibility",
y = "Value",
color = "Curve Type") +
scale_color_manual(values = c("orange", "lightblue", "magenta")) +
theme_minimal()
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
geom_vline(xintercept = 5.5, linetype = "longdash") +
annotate("text", x = 5.5, y = 9,
label = "Optimal Flexibility",
angle = 90, vjust = -0.5)
x <- seq(0,15, length.out=100) # x-axis
variance <- (x-1)^2 / 20 # variance
bias <- (10-x)^2 / 20 # Bias
test_mse <- variance + bias + 2 # test MSE
df <- data.frame(x, test_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
geom_vline(xintercept = 5.5, linetype = "longdash") +
annotate("text", x = 5.5, y = 9,
label = "Optimal Flexibility",
angle = 90, vjust = -0.5) +
geom_hline(yintercept = 2, linetype = "longdash") +
annotate("text", x = 12, y = 2,
label = "Horizontal line at y=2",
vjust = -1) +
labs(title = "Bias-Variance Tradeoff Curves",
x = "Flexibility",
y = "Value",
color = "Curve Type") +
scale_color_manual(values = c("orange", "lightblue", "magenta")) +
theme_minimal()
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
geom_vline(xintercept = 5.5, linetype = "longdash") +
annotate("text", x = 5.5, y = 9,
label = "Optimal Flexibility",
angle = 90, vjust = -0.5) +
geom_hline(yintercept = 2, linetype = "longdash") +
annotate("text", x = 12, y = 2,
label = "Bayes Error Curve",
vjust = -1) +
labs(title = "Bias-Variance Tradeoff Curves",
x = "Flexibility",
y = "Value",
color = "Curve Type") +
scale_color_manual(values = c("orange", "lightblue", "magenta")) +
theme_minimal()
x <- seq(0,10, length.out=100) # x-axis
variance <- (x-1)^2 / 20 # variance
bias <- (10-x)^2 / 20 # Bias
test_mse <- variance + bias + 2 # test MSE
df <- data.frame(x, test_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
geom_vline(xintercept = 5.5, linetype = "longdash") +
annotate("text", x = 5.5, y = 9,
label = "Optimal Flexibility",
angle = 90, vjust = -0.5) +
geom_hline(yintercept = 2, linetype = "longdash") +
annotate("text", x = 12, y = 2,
label = "Bayes Error Curve",
vjust = -1) +
labs(title = "Bias-Variance Tradeoff Curves",
x = "Flexibility",
y = "Value",
color = "Curve Type") +
scale_color_manual(values = c("orange", "lightblue", "magenta")) +
theme_minimal()
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
geom_vline(xintercept = 5.5, linetype = "longdash") +
annotate("text", x = 5.5, y = 6,
label = "Optimal Flexibility",
angle = 90, vjust = -0.5) +
geom_hline(yintercept = 2, linetype = "longdash") +
annotate("text", x = 12, y = 2,
label = "Bayes Error Curve",
vjust = -1) +
labs(title = "Bias-Variance Tradeoff Curves",
x = "Flexibility",
y = "Value",
color = "Curve Type") +
scale_color_manual(values = c("orange", "lightblue", "magenta")) +
theme_minimal()
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
geom_vline(xintercept = 5.5, linetype = "longdash") +
annotate("text", x = 5.5, y = 6,
label = "Optimal Flexibility",
angle = 90, vjust = -0.5) +
geom_hline(yintercept = 2, linetype = "longdash") +
annotate("text", x = 10, y = 2,
label = "Bayes Error Curve",
vjust = -1) +
labs(title = "Bias-Variance Tradeoff Curves",
x = "Flexibility",
y = "Value",
color = "Curve Type") +
scale_color_manual(values = c("orange", "lightblue", "magenta")) +
theme_minimal()
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
geom_vline(xintercept = 5.5, linetype = "longdash") +
annotate("text", x = 5.5, y = 6,
label = "Optimal Flexibility",
angle = 90, vjust = -0.5) +
geom_hline(yintercept = 2, linetype = "longdash") +
annotate("text", x = 0, y = 2,
label = "Bayes Error Curve",
vjust = -1) +
labs(title = "Bias-Variance Tradeoff Curves",
x = "Flexibility",
y = "Value",
color = "Curve Type") +
scale_color_manual(values = c("orange", "lightblue", "magenta")) +
theme_minimal()
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
geom_vline(xintercept = 5.5, linetype = "longdash") +
annotate("text", x = 5.5, y = 6,
label = "Optimal Flexibility",
angle = 90, vjust = -0.5) +
geom_hline(yintercept = 2, linetype = "longdash") +
annotate("text", x = 2, y = 2,
label = "Bayes Error Curve",
vjust = -1) +
labs(title = "Bias-Variance Tradeoff Curves",
x = "Flexibility",
y = "Value",
color = "Curve Type") +
scale_color_manual(values = c("orange", "lightblue", "magenta")) +
theme_minimal()
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
geom_vline(xintercept = 5.5, linetype = "longdash") +
annotate("text", x = 5.5, y = 6,
label = "Optimal Flexibility",
angle = 90, vjust = -0.5) +
geom_hline(yintercept = 2, linetype = "longdash") +
annotate("text", x = 1.5, y = 2,
label = "Bayes Error Curve",
vjust = -1) +
labs(title = "Bias-Variance Tradeoff Curves",
x = "Flexibility",
y = "Value",
color = "Curve Type") +
scale_color_manual(values = c("orange", "lightblue", "magenta")) +
theme_minimal()
x <- seq(0,10, length.out=100) # x-axis
variance <- (x-1)^2 / 20 # variance
bias <- (10-x)^2 / 20 # Bias
test_mse <- variance + bias + 2 # test MSE
train_mse <- 3 - 0.2 * x
df <- data.frame(x, test_mse, train_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
geom_vline(xintercept = 5.5, linetype = "longdash") +
annotate("text", x = 5.5, y = 6,
label = "Optimal Flexibility",
angle = 90, vjust = -0.5) +
geom_hline(yintercept = 2, linetype = "longdash") +
annotate("text", x = 1.5, y = 2,
label = "Bayes Error Curve",
vjust = -1) +
labs(title = "Bias-Variance Tradeoff Curves",
x = "Flexibility",
y = "Value",
color = "Curve Type") +
scale_color_manual(values = c("orange", "lightblue", "magenta")) +
theme_minimal()
x <- seq(0,10, length.out=100) # x-axis
variance <- (x-1)^2 / 20 # variance
bias <- (10-x)^2 / 20 # Bias
test_mse <- variance + bias + 2 # test MSE
train_mse <- 3 - 0.2 * x
df <- data.frame(x, test_mse, train_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, train_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
geom_vline(xintercept = 5.5, linetype = "longdash") +
annotate("text", x = 5.5, y = 6,
label = "Optimal Flexibility",
angle = 90, vjust = -0.5) +
geom_hline(yintercept = 2, linetype = "longdash") +
annotate("text", x = 1.5, y = 2,
label = "Bayes Error Curve",
vjust = -1) +
labs(title = "Bias-Variance Tradeoff Curves",
x = "Flexibility",
y = "Value",
color = "Curve Type") +
scale_color_manual(values = c("orange", "lightblue", "magenta", "darkblue")) +
theme_minimal()
set.seed(1)
x <-rnorm(100)
y <- x- 2 * x^2 + rnorm(100)
library(ggplot2)
library(tidyr)
x <- seq(0,10, length.out=100) # x-axis
variance <- (x-1)^2 / 20 # variance
bias <- (10-x)^2 / 20 # Bias
test_mse <- variance + bias + 2 # test MSE
train_mse <- 3 - 0.2 * x
df <- data.frame(x, test_mse, train_mse, variance, bias)
df_long <- pivot_longer(df, cols = c(test_mse, train_mse, variance, bias),
names_to = "curve", values_to = "value")
ggplot(df_long, aes(x = x, y = value, color = curve)) +
geom_line(size = 1) +
geom_vline(xintercept = 5.5, linetype = "longdash") +
annotate("text", x = 5.5, y = 6,
label = "Optimal Flexibility",
angle = 90, vjust = -0.5) +
geom_hline(yintercept = 2, linetype = "longdash") +
annotate("text", x = 1.5, y = 2,
label = "Bayes Error Curve",
vjust = -1) +
labs(title = "Bias-Variance Tradeoff Curves",
x = "Flexibility",
y = "Value",
color = "Curve Type") +
scale_color_manual(values = c("orange", "lightblue", "magenta", "darkblue")) +
theme_minimal()
set.seed(1)
x <-rnorm(100)
y <- x- 2 * x^2 + rnorm(100)
tinytex::reinstall_tinytex(repository = "illinois")
install.packages("tinytex")
install.packages("tinytex")
